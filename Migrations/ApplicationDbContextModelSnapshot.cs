// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sales_System_Api.Models;

#nullable disable

namespace Sales_System_Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sales_System_Api.Models.Branch", b =>
                {
                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BranchId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("FiscalAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PhysicalAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("BranchId")
                        .HasName("PK__Branch__A1682FC5BCF9022E");

                    b.HasIndex("ManagerId");

                    b.ToTable("Branch", (string)null);
                });

            modelBuilder.Entity("Sales_System_Api.Models.CashRegister", b =>
                {
                    b.Property<int>("CashRegisterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CashRegisterId"));

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<decimal>("CurrentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("InitialAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("InventoryNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CashRegisterId")
                        .HasName("PK__CashRegi__7B5CAE9478EC971C");

                    b.HasIndex("BranchId");

                    b.ToTable("CashRegister", (string)null);
                });

            modelBuilder.Entity("Sales_System_Api.Models.CashRegisterAssignment", b =>
                {
                    b.Property<int>("CashRegisterAssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CashRegisterAssignmentId"));

                    b.Property<DateOnly?>("AssignmentDate")
                        .HasColumnType("date");

                    b.Property<int?>("CashRegisterId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("CashRegisterAssignmentId")
                        .HasName("PK__CashRegi__38D5565BB432D947");

                    b.HasIndex("CashRegisterId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("CashRegisterAssignment", (string)null);
                });

            modelBuilder.Entity("Sales_System_Api.Models.CreditPayment", b =>
                {
                    b.Property<int>("CreditPaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CreditPaymentId"));

                    b.Property<decimal?>("AmountPaid")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("CreditSaleId")
                        .HasColumnType("int");

                    b.Property<decimal?>("LateFee")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime");

                    b.HasKey("CreditPaymentId")
                        .HasName("PK__CreditPa__3C85B75341E2C066");

                    b.HasIndex("CreditSaleId");

                    b.ToTable("CreditPayment", (string)null);
                });

            modelBuilder.Entity("Sales_System_Api.Models.CreditSale", b =>
                {
                    b.Property<int>("CreditSaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CreditSaleId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DownPayment")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("InterestRate")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<int?>("SaleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("StripePaymentReference")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("TermMonths")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalCredit")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("CreditSaleId")
                        .HasName("PK__CreditSa__91BA63860DE92BF8");

                    b.HasIndex("CustomerId");

                    b.HasIndex("SaleId");

                    b.ToTable("CreditSale", (string)null);
                });

            modelBuilder.Entity("Sales_System_Api.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<DateOnly?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<int?>("BranchCreationId")
                        .HasColumnType("int");

                    b.Property<string>("BranchCreationName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CivilStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Curp")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CustomerOccupation")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Gender")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Ine")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Notes")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Rfc")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CustomerId")
                        .HasName("PK__Customer__A4AE64D87C737727");

                    b.HasIndex("BranchCreationId");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("Sales_System_Api.Models.ElectronicVoucher", b =>
                {
                    b.Property<int>("ElectronicVoucherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ElectronicVoucherId"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsTransferable")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ElectronicVoucherId")
                        .HasName("PK__Electron__1B605C2F4224C776");

                    b.HasIndex("CustomerId");

                    b.ToTable("ElectronicVoucher", (string)null);
                });

            modelBuilder.Entity("Sales_System_Api.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Position")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("EmployeeId")
                        .HasName("PK__Employee__7AD04F11FD4FC685");

                    b.HasIndex("BranchId");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("Sales_System_Api.Models.Family", b =>
                {
                    b.Property<int>("FamilyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FamilyId"));

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsJewel")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("FamilyId")
                        .HasName("PK__Family__41D82F6BD55A321E");

                    b.ToTable("Family", (string)null);
                });

            modelBuilder.Entity("Sales_System_Api.Models.Inventory", b =>
                {
                    b.Property<int>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryId"));

                    b.Property<string>("AcquisitionFolio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EntryDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Invoice")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Supplier")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("InventoryId")
                        .HasName("PK__Inventor__F5FDE6B37E9DD6CA");

                    b.HasIndex("BranchId");

                    b.HasIndex("ProductId");

                    b.ToTable("Inventory", (string)null);
                });

            modelBuilder.Entity("Sales_System_Api.Models.Layaway", b =>
                {
                    b.Property<int>("LayawayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LayawayId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DownPayment")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime?>("LayawayDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("LayawayId")
                        .HasName("PK__Layaway__5B5668CB49F63707");

                    b.HasIndex("CustomerId");

                    b.ToTable("Layaway", (string)null);
                });

            modelBuilder.Entity("Sales_System_Api.Models.LayawayDetail", b =>
                {
                    b.Property<int>("LayawayDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LayawayDetailId"));

                    b.Property<int?>("LayawayId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("LayawayDetailId")
                        .HasName("PK__LayawayD__79E9820510D67F53");

                    b.HasIndex("LayawayId");

                    b.HasIndex("ProductId");

                    b.ToTable("LayawayDetail", (string)null);
                });

            modelBuilder.Entity("Sales_System_Api.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Concept")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PaymentType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StripePaymentReference")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("PaymentId")
                        .HasName("PK__Payment__9B556A38013462C2");

                    b.HasIndex("CustomerId");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("Sales_System_Api.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsJewel")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("SubFamilyId")
                        .HasColumnType("int");

                    b.HasKey("ProductId")
                        .HasName("PK__Product__B40CC6CDDEEDFB15");

                    b.HasIndex("SubFamilyId");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("Sales_System_Api.Models.Sale", b =>
                {
                    b.Property<int>("SaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaleId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("SaleDate")
                        .HasColumnType("datetime");

                    b.Property<string>("StripePaymentReference")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("SaleId")
                        .HasName("PK__Sale__1EE3C3FF3C4603D6");

                    b.HasIndex("CustomerId");

                    b.ToTable("Sale", (string)null);
                });

            modelBuilder.Entity("Sales_System_Api.Models.SaleDetail", b =>
                {
                    b.Property<int>("SaleDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaleDetailId"));

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("SaleId")
                        .HasColumnType("int");

                    b.HasKey("SaleDetailId")
                        .HasName("PK__SaleDeta__70DB14FE0D6D2754");

                    b.HasIndex("ProductId");

                    b.HasIndex("SaleId");

                    b.ToTable("SaleDetail", (string)null);
                });

            modelBuilder.Entity("Sales_System_Api.Models.ScheduledCreditPayment", b =>
                {
                    b.Property<int>("ScheduledCreditPaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduledCreditPaymentId"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("CreditSaleId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("DueDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.HasKey("ScheduledCreditPaymentId")
                        .HasName("PK__Schedule__5AA454D392D3A303");

                    b.HasIndex("CreditSaleId");

                    b.ToTable("ScheduledCreditPayment", (string)null);
                });

            modelBuilder.Entity("Sales_System_Api.Models.ScheduledLayawayPayment", b =>
                {
                    b.Property<int>("ScheduledLayawayPaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduledLayawayPaymentId"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateOnly?>("DueDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<int?>("LayawayId")
                        .HasColumnType("int");

                    b.HasKey("ScheduledLayawayPaymentId")
                        .HasName("PK__Schedule__40A22A3CBCD4148E");

                    b.HasIndex("LayawayId");

                    b.ToTable("ScheduledLayawayPayment", (string)null);
                });

            modelBuilder.Entity("Sales_System_Api.Models.SubFamily", b =>
                {
                    b.Property<int>("SubFamilyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubFamilyId"));

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("FamilyId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsJewel")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("SubFamilyId")
                        .HasName("PK__SubFamil__7767F330700D179B");

                    b.HasIndex("FamilyId");

                    b.ToTable("SubFamily", (string)null);
                });

            modelBuilder.Entity("Sales_System_Api.Models.Transfer", b =>
                {
                    b.Property<int>("TransferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransferId"));

                    b.Property<int?>("DestinationBranchId")
                        .HasColumnType("int");

                    b.Property<string>("Observations")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("SourceBranchId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TransferDate")
                        .HasColumnType("datetime");

                    b.HasKey("TransferId")
                        .HasName("PK__Transfer__95490091335288E9");

                    b.HasIndex("DestinationBranchId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SourceBranchId");

                    b.ToTable("Transfer", (string)null);
                });

            modelBuilder.Entity("Sales_System_Api.Models.Branch", b =>
                {
                    b.HasOne("Sales_System_Api.Models.Employee", "Manager")
                        .WithMany("Branches")
                        .HasForeignKey("ManagerId")
                        .HasConstraintName("FK_Branch_Manager");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Sales_System_Api.Models.CashRegister", b =>
                {
                    b.HasOne("Sales_System_Api.Models.Branch", "Branch")
                        .WithMany("CashRegisters")
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK__CashRegis__Branc__3C69FB99");

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("Sales_System_Api.Models.CashRegisterAssignment", b =>
                {
                    b.HasOne("Sales_System_Api.Models.CashRegister", "CashRegister")
                        .WithMany("CashRegisterAssignments")
                        .HasForeignKey("CashRegisterId")
                        .HasConstraintName("FK__CashRegis__CashR__3F466844");

                    b.HasOne("Sales_System_Api.Models.Employee", "Employee")
                        .WithMany("CashRegisterAssignments")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK__CashRegis__Emplo__403A8C7D");

                    b.Navigation("CashRegister");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Sales_System_Api.Models.CreditPayment", b =>
                {
                    b.HasOne("Sales_System_Api.Models.CreditSale", "CreditSale")
                        .WithMany("CreditPayments")
                        .HasForeignKey("CreditSaleId")
                        .HasConstraintName("FK__CreditPay__Credi__6D0D32F4");

                    b.Navigation("CreditSale");
                });

            modelBuilder.Entity("Sales_System_Api.Models.CreditSale", b =>
                {
                    b.HasOne("Sales_System_Api.Models.Customer", "Customer")
                        .WithMany("CreditSales")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__CreditSal__Custo__6A30C649");

                    b.HasOne("Sales_System_Api.Models.Sale", "Sale")
                        .WithMany("CreditSales")
                        .HasForeignKey("SaleId")
                        .HasConstraintName("FK__CreditSal__SaleI__693CA210");

                    b.Navigation("Customer");

                    b.Navigation("Sale");
                });

            modelBuilder.Entity("Sales_System_Api.Models.Customer", b =>
                {
                    b.HasOne("Sales_System_Api.Models.Branch", "BranchCreation")
                        .WithMany("Customers")
                        .HasForeignKey("BranchCreationId")
                        .HasConstraintName("FK__Customer__Branch__4316F928");

                    b.Navigation("BranchCreation");
                });

            modelBuilder.Entity("Sales_System_Api.Models.ElectronicVoucher", b =>
                {
                    b.HasOne("Sales_System_Api.Models.Customer", "Customer")
                        .WithMany("ElectronicVouchers")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__Electroni__Custo__66603565");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Sales_System_Api.Models.Employee", b =>
                {
                    b.HasOne("Sales_System_Api.Models.Branch", "Branch")
                        .WithMany("Employees")
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK__Employee__Branch__38996AB5");

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("Sales_System_Api.Models.Inventory", b =>
                {
                    b.HasOne("Sales_System_Api.Models.Branch", "Branch")
                        .WithMany("Inventories")
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK__Inventory__Branc__4E88ABD4");

                    b.HasOne("Sales_System_Api.Models.Product", "Product")
                        .WithMany("Inventories")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__Inventory__Produ__4D94879B");

                    b.Navigation("Branch");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Sales_System_Api.Models.Layaway", b =>
                {
                    b.HasOne("Sales_System_Api.Models.Customer", "Customer")
                        .WithMany("Layaways")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__Layaway__Custome__5812160E");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Sales_System_Api.Models.LayawayDetail", b =>
                {
                    b.HasOne("Sales_System_Api.Models.Layaway", "Layaway")
                        .WithMany("LayawayDetails")
                        .HasForeignKey("LayawayId")
                        .HasConstraintName("FK__LayawayDe__Layaw__5AEE82B9");

                    b.HasOne("Sales_System_Api.Models.Product", "Product")
                        .WithMany("LayawayDetails")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__LayawayDe__Produ__5BE2A6F2");

                    b.Navigation("Layaway");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Sales_System_Api.Models.Payment", b =>
                {
                    b.HasOne("Sales_System_Api.Models.Customer", "Customer")
                        .WithMany("Payments")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__Payment__Custome__5EBF139D");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Sales_System_Api.Models.Product", b =>
                {
                    b.HasOne("Sales_System_Api.Models.SubFamily", "SubFamily")
                        .WithMany("Products")
                        .HasForeignKey("SubFamilyId")
                        .HasConstraintName("FK__Product__SubFami__4AB81AF0");

                    b.Navigation("SubFamily");
                });

            modelBuilder.Entity("Sales_System_Api.Models.Sale", b =>
                {
                    b.HasOne("Sales_System_Api.Models.Customer", "Customer")
                        .WithMany("Sales")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__Sale__CustomerId__5165187F");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Sales_System_Api.Models.SaleDetail", b =>
                {
                    b.HasOne("Sales_System_Api.Models.Product", "Product")
                        .WithMany("SaleDetails")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__SaleDetai__Produ__5535A963");

                    b.HasOne("Sales_System_Api.Models.Sale", "Sale")
                        .WithMany("SaleDetails")
                        .HasForeignKey("SaleId")
                        .HasConstraintName("FK__SaleDetai__SaleI__5441852A");

                    b.Navigation("Product");

                    b.Navigation("Sale");
                });

            modelBuilder.Entity("Sales_System_Api.Models.ScheduledCreditPayment", b =>
                {
                    b.HasOne("Sales_System_Api.Models.CreditSale", "CreditSale")
                        .WithMany("ScheduledCreditPayments")
                        .HasForeignKey("CreditSaleId")
                        .HasConstraintName("FK__Scheduled__Credi__72C60C4A");

                    b.Navigation("CreditSale");
                });

            modelBuilder.Entity("Sales_System_Api.Models.ScheduledLayawayPayment", b =>
                {
                    b.HasOne("Sales_System_Api.Models.Layaway", "Layaway")
                        .WithMany("ScheduledLayawayPayments")
                        .HasForeignKey("LayawayId")
                        .HasConstraintName("FK__Scheduled__Layaw__6FE99F9F");

                    b.Navigation("Layaway");
                });

            modelBuilder.Entity("Sales_System_Api.Models.SubFamily", b =>
                {
                    b.HasOne("Sales_System_Api.Models.Family", "Family")
                        .WithMany("SubFamilies")
                        .HasForeignKey("FamilyId")
                        .HasConstraintName("FK__SubFamily__Famil__47DBAE45");

                    b.Navigation("Family");
                });

            modelBuilder.Entity("Sales_System_Api.Models.Transfer", b =>
                {
                    b.HasOne("Sales_System_Api.Models.Branch", "DestinationBranch")
                        .WithMany("TransferDestinationBranches")
                        .HasForeignKey("DestinationBranchId")
                        .HasConstraintName("FK__Transfer__Destin__6383C8BA");

                    b.HasOne("Sales_System_Api.Models.Product", "Product")
                        .WithMany("Transfers")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__Transfer__Produc__619B8048");

                    b.HasOne("Sales_System_Api.Models.Branch", "SourceBranch")
                        .WithMany("TransferSourceBranches")
                        .HasForeignKey("SourceBranchId")
                        .HasConstraintName("FK__Transfer__Source__628FA481");

                    b.Navigation("DestinationBranch");

                    b.Navigation("Product");

                    b.Navigation("SourceBranch");
                });

            modelBuilder.Entity("Sales_System_Api.Models.Branch", b =>
                {
                    b.Navigation("CashRegisters");

                    b.Navigation("Customers");

                    b.Navigation("Employees");

                    b.Navigation("Inventories");

                    b.Navigation("TransferDestinationBranches");

                    b.Navigation("TransferSourceBranches");
                });

            modelBuilder.Entity("Sales_System_Api.Models.CashRegister", b =>
                {
                    b.Navigation("CashRegisterAssignments");
                });

            modelBuilder.Entity("Sales_System_Api.Models.CreditSale", b =>
                {
                    b.Navigation("CreditPayments");

                    b.Navigation("ScheduledCreditPayments");
                });

            modelBuilder.Entity("Sales_System_Api.Models.Customer", b =>
                {
                    b.Navigation("CreditSales");

                    b.Navigation("ElectronicVouchers");

                    b.Navigation("Layaways");

                    b.Navigation("Payments");

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("Sales_System_Api.Models.Employee", b =>
                {
                    b.Navigation("Branches");

                    b.Navigation("CashRegisterAssignments");
                });

            modelBuilder.Entity("Sales_System_Api.Models.Family", b =>
                {
                    b.Navigation("SubFamilies");
                });

            modelBuilder.Entity("Sales_System_Api.Models.Layaway", b =>
                {
                    b.Navigation("LayawayDetails");

                    b.Navigation("ScheduledLayawayPayments");
                });

            modelBuilder.Entity("Sales_System_Api.Models.Product", b =>
                {
                    b.Navigation("Inventories");

                    b.Navigation("LayawayDetails");

                    b.Navigation("SaleDetails");

                    b.Navigation("Transfers");
                });

            modelBuilder.Entity("Sales_System_Api.Models.Sale", b =>
                {
                    b.Navigation("CreditSales");

                    b.Navigation("SaleDetails");
                });

            modelBuilder.Entity("Sales_System_Api.Models.SubFamily", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
